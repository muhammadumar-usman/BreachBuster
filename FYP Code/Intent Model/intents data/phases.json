{
    "1": {
        "name": "Scanning and Recon",
        "responses": {
            "start": "Welcome to Scanning and Recon phase. ",
            "target_select": "What is the target of this PenTest? ",
            "help": "Not sure what to do? Options for this phase include target selection, and how to perform scanning using tools (osint scan, nmap scan, google dorks). ",
            "osint": "Performing an OSINT (Open Source Intelligence) scan on a target involves gathering publicly available information from various sources to gain insights into the target's digital footprint. To start, identify the target and its related entities such as domain names, email addresses, usernames, or company names. Begin by utilizing search engines like Google, Bing, or specialized search tools to look for any publicly accessible information associated with the target. This includes website URLs, social media profiles, forums, and online databases. Next, leverage social media platforms like LinkedIn, Facebook, Twitter, and Instagram to gather information about employees, key personnel, and their connections. Analyze any publicly shared content such as posts, images, and comments for potential leads. Additionally, explore public records, government databases, and business registries for official information about the target entity. OSINT tools like Shodan, Maltego, and theHarvester can automate part of this process by gathering data from various sources. Throughout the OSINT scan, ensure compliance with ethical guidelines and legal boundaries, respecting privacy and data protection regulations. The goal is to compile a comprehensive profile of the target using openly available data, which can aid in understanding its digital presence and potential security risks.",
            "nmap_scan": "Performing an Nmap scan on a web target involves using Nmap, a versatile network scanning tool, to gather information about open ports, services running on those ports, and potentially identify vulnerabilities. To initiate a basic Nmap scan on a web target, start by obtaining the target's IP address. This can be done by resolving the domain name of the target using a DNS lookup tool such as nslookup or dig. Once you have the IP address, open a terminal and execute an Nmap scan with the IP address as the target. For example, run the following command: nmap [target_ip_address]. This basic command will perform a default Nmap scan, which includes a TCP SYN scan (-sS) on the most common 1,000 TCP ports (-F). The scan will provide information about which ports are open and the services running on those ports. To perform a more comprehensive scan, you can specify additional options with the Nmap command. For example, to scan all TCP ports (-p-) and perform service version detection (-sV), use the following command: nmap -p- -sV [target_ip_address]. This command will scan all 65,535 TCP ports and attempt to identify the versions of services running on those ports. Depending on the scope and purpose of your scan, you can customize Nmap options further to include UDP port scanning (-sU), OS detection (-O), script scanning (-sC), or aggressive scanning (-A) for additional information and reconnaissance. It's important to note that performing Nmap scans without proper authorization may violate legal or ethical guidelines. Always ensure you have permission from the target owner or responsible party before conducting any network scanning activities. Additionally, be mindful of network and system administrators as Nmap scans can be detected and may trigger security alerts or firewall rules.",
            "google_dorks": "Performing a Google Dorks scan involves using specific search queries with advanced operators to gather information about a web target from Google's search engine. To start, open a web browser and navigate to Google's search page. Instead of using standard keywords, use Google's advanced operators to narrow down the search results. For example, to search for sensitive information like exposed directories or files related to a specific domain, use the site: operator followed by the target domain. For instance, typing site:example.com into the Google search bar will return results specifically from the example.com domain. To refine the search further, incorporate additional operators like intitle:, inurl:, or filetype: to target specific types of content such as filenames or webpage titles. For example, site:example.com intitle:index.of can be used to look for open directories on the target domain. Experiment with different combinations of operators to uncover potentially sensitive information such as configuration files, login pages, or vulnerable web applications. Be mindful when using Google Dorks as they can potentially expose sensitive data and should only be used with proper authorization and ethical considerations."
        }
    },
    "2": {
        "name": "Enumeration",
        "responses": {
            "start": "Welcome to Enumeration phase. What information would you like to gather?",
            "select_technology": "What target would you like to select? ",
            "help": "Not sure what to do? Options for this phase include selection of technology(to test) , enumeration of sub-domains, enumeration of web application functions, probing directories, identifying web components, discovering web technologies, enumerating server side technologies etc. ",
	    "enum_subdomains": "Enumerating sub-domains and related domains involves the process of discovering additional domain names associated with the target organization's primary domain. This step is crucial in web application penetration testing to comprehensively map the organization's online footprint and identify potential entry points for attack. Sub-domain enumeration tools like Sublist3r, Amass, or DNSDumpster are used to query public DNS records, search engine caches, and other data sources to uncover sub-domains that may point to distinct web applications, services, or infrastructure components. Additionally, exploring related domains that share similarities in naming conventions or ownership can reveal interconnected web assets and third-party services used by the organization. By expanding the scope beyond the primary domain, security testers gain valuable insights into the organization's digital ecosystem, allowing for more thorough vulnerability assessment and risk analysis.",
	    "identify_web_components": "Identifying web application components involves thoroughly exploring the structure and functionality of a web application to pinpoint its various elements and endpoints. This process includes mapping out web pages, forms, APIs, URLs, parameters, cookies, and hidden elements that make up the application's user interface and backend functionality. Security professionals use web crawling tools and manual inspection techniques to systematically navigate through the application, discovering all accessible components and interactions. By understanding the full scope of web application components, testers can assess potential attack surfaces, validate input fields for vulnerabilities, and gain insights into the underlying architecture and logic of the application. This information forms the foundation for subsequent phases of the penetration test, allowing for more targeted analysis and testing of specific areas within the application.",
            "probe_directory_and_files": "To probe for directory and file listings during a web application penetration test, security professionals use tools and techniques to discover hidden directories and files on the web server. This process involves conducting directory brute-forcing, where tools like DirBuster, Dirsearch, or GoBuster are employed to systematically guess and test directory and file names that may not be directly linked from the web application's pages. The goal is to identify directories that are not protected by default access controls or are meant to be hidden from public view. By enumerating directory and file listings, testers can uncover sensitive files such as configuration files, backup files, logs, or temporary files that might contain valuable information or serve as potential entry points for attackers. This process helps in comprehensively mapping out the web application's file structure and identifying potential security risks associated with exposed directories or files.",
	    "enum_webapp_func": "Enumerating web application functionality involves thoroughly exploring and interacting with different features and capabilities of the web application to understand its behavior and potential attack surfaces. This process includes systematically testing various functionalities such as user authentication (login/logout mechanisms), input validation (handling of user input), session management (tracking user sessions), file upload/download capabilities, database interactions (querying and modifying data), and any other interactive components like forms, buttons, and navigation menus. During this phase, pentesters aim to identify vulnerabilities such as injection flaws (e.g., SQL injection, XSS), insecure direct object references, authentication bypasses, and business logic flaws by manipulating inputs, parameters, and workflows within the application. Additionally, enumerating functionality involves assessing how the application handles error conditions, redirects, and permissions to uncover potential security weaknesses and misconfigurations that could be exploited by attackers. This comprehensive analysis helps in pinpointing critical areas that require further testing and security validation.",
 	    "discover_web_tech": "Discovering web technologies during a penetration test involves identifying the underlying software components and technologies used by a web application. This includes determining the web server software (e.g., Apache HTTP Server, nginx, Microsoft IIS), programming languages (e.g., PHP, Python, Java), frameworks (e.g., Ruby on Rails, Django, Flask), and other supporting libraries or services (e.g., databases such as MySQL, PostgreSQL, MongoDB; caching systems like Redis). Techniques for discovering web technologies include analyzing HTTP headers, error messages, response patterns, and specific behaviors exhibited by the application. For instance, examining HTTP response headers can reveal server information (e.g., Server header), supported scripting languages (e.g., X-Powered-By header), or security-related headers (e.g., Content-Security-Policy). This information is crucial for understanding the attack surface, potential vulnerabilities, and appropriate exploitation techniques tailored to the specific technologies in use.",
    	    "server_side_enum": "Identifying server-side technologies and their versions during a web application penetration test involves analyzing various aspects of the HTTP responses and server behavior to determine the underlying software stack powering the web server. This process typically includes examining HTTP headers, error messages, default pages, and response patterns. By inspecting the HTTP headers (such as Server and X-Powered-By), testers can often identify the type of web server (e.g., Apache, nginx, IIS) and additional server-side technologies like application frameworks or programming languages (e.g., PHP, ASP.NET, Ruby on Rails). Error messages and default pages may reveal specific version numbers or configurations, providing valuable insights into potential vulnerabilities associated with outdated or misconfigured software components. This information assists testers in crafting targeted exploits and assessing the security posture of the server-side environment.",
	    "select_technology": "Using dicussed tools and techniques, what CVE, product, or web technology have you identified, that would you like to test?",
            "show_vulnerabilities": "Here are the vulnerabilities(CVEs) for this web technology : ",
	    "end": "Exiting Enumeration phase. Proceed to Exploitation phase."
        }
    },
    "3": {
        "name": "Exploitation",
        "responses": {
            "start": "Welcome to Exploitation phase. How would you like to proceed with exploitation?",
            "help": "Not sure what to do? Options for this phase include displaying exploits selected vulnerability, printing further details for these exploits etc ",
	    "show_exploits": "Here are the exploits : ",
	    "select_exploit": "Select exploits from : ",
	    "next_exploit": "Next exploit is : ",
	    "exploit_details": "Here are the details for this exploit : ",
            "end": "Exiting Exploitation phase. Proceed to Remediation and Documentation phase."
        }
    },
    "4": {
        "name": "Remediation and Documentation",
        "responses": {
            "start": "Welcome to Remediation and Documentation phase. What remedial actions are needed?",
            "help": "Not sure what to do? ........................",
	    "mitigation": "Here are mitigations : ....",
            "generate_report": "Generating report...",
            "end": "Exiting Remediation and Documentation phase. Penetration testing complete."
        }
    }
}
